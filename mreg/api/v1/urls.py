from django.urls import path, re_path

from . import views, views_hostgroups

urlpatterns = [
    path('cnames/', views.CnameList.as_view()),
    path('cnames/<name>', views.CnameDetail.as_view()),
    path('dhcphosts/ipv4/', views.DhcpHostsAllV4.as_view()),
    path('dhcphosts/ipv6/', views.DhcpHostsAllV6.as_view()),
    path('dhcphosts/ipv6byipv4/<ip>/<range>', views.DhcpHostsV4ByV6.as_view()),
    path('dhcphosts/ipv6byipv4/', views.DhcpHostsV4ByV6.as_view()),
    path('dhcphosts/<ip>/<range>', views.DhcpHostsByRange.as_view()),
    path('hinfopresets/', views.HinfoPresetList.as_view()),
    path('hinfopresets/<pk>', views.HinfoPresetDetail.as_view()),
    path('hosts/', views.HostList.as_view()),
    path('hosts/<name>', views.HostDetail.as_view()),
    path('hostgroups/', views_hostgroups.HostGroupList.as_view()),
    path('hostgroups/<name>', views_hostgroups.HostGroupDetail.as_view()),
    path('hostgroups/<name>/groups/', views_hostgroups.HostGroupGroupsList.as_view()),
    path('hostgroups/<name>/groups/<group>', views_hostgroups.HostGroupGroupsDetail.as_view()),
    path('hostgroups/<name>/hosts/', views_hostgroups.HostGroupHostsList.as_view()),
    path('hostgroups/<name>/hosts/<host>', views_hostgroups.HostGroupHostsDetail.as_view()),
    path('hostgroups/<name>/owners/', views_hostgroups.HostGroupOwnersList.as_view()),
    path('hostgroups/<name>/owners/<owner>', views_hostgroups.HostGroupOwnersDetail.as_view()),
    path('ipaddresses/', views.IpaddressList.as_view()),
    path('ipaddresses/<pk>', views.IpaddressDetail.as_view()),
    path('mxs/', views.MxList.as_view()),
    path('mxs/<pk>', views.MxDetail.as_view()),
    path('naptrs/', views.NaptrList.as_view()),
    path('naptrs/<pk>', views.NaptrDetail.as_view()),
    path('nameservers/', views.NameServerList.as_view()),
    path('nameservers/<name>', views.NameServerDetail.as_view()),
    path('ptroverrides/', views.PtrOverrideList.as_view()),
    path('ptroverrides/<pk>', views.PtrOverrideDetail.as_view()),
    path('sshfps/', views.SshfpList.as_view()),
    path('sshfps/<pk>', views.SshfpDetail.as_view()),
    path('srvs/', views.SrvList.as_view()),
    path('srvs/<pk>', views.SrvDetail.as_view()),
    path('networks/', views.NetworkList.as_view()),
    path('networks/ip/<ip>', views.network_by_ip),
    re_path(r'^networks/(?P<network>[^/]+/\d+)$', views.NetworkDetail.as_view()),
    re_path(r'^networks/(?P<network>[^/]+/\d+)/first_unused', views.network_first_unused),
    re_path(r'^networks/(?P<network>[^/]+/\d+)/ptroverride_list', views.network_ptroverride_list),
    re_path(r'^networks/(?P<network>[^/]+/\d+)/ptroverride_host_list', views.network_ptroverride_host_list),
    re_path(r'^networks/(?P<network>[^/]+/\d+)/reserved_list', views.network_reserved_list),
    re_path(r'^networks/(?P<network>[^/]+/\d+)/used_count', views.network_used_count),
    re_path(r'^networks/(?P<network>[^/]+/\d+)/used_list', views.network_used_list),
    re_path(r'^networks/(?P<network>[^/]+/\d+)/used_host_list', views.network_used_host_list),
    re_path(r'^networks/(?P<network>[^/]+/\d+)/unused_count', views.network_unused_count),
    re_path(r'^networks/(?P<network>[^/]+/\d+)/unused_list', views.network_unused_list),
    path('txts/', views.TxtList.as_view()),
    path('txts/<pk>', views.TxtDetail.as_view()),
    path('zones/', views.ZoneList.as_view()),
    path('zones/hostname/<hostname>', views.zone_by_hostname),
    re_path(r'^zones/(?P<name>(\d+/)?[^/]+)$', views.ZoneDetail.as_view()),
    re_path(r'^zones/(?P<name>(\d+/)?[^/]+)/delegations/$', views.ZoneDelegationList.as_view()),
    re_path(r'^zones/(?P<name>(\d+/)?[^/]+)/delegations/(?P<delegation>(.*))', views.ZoneDelegationDetail.as_view()),
    re_path(r'^zones/(?P<name>(\d+/)?[^/]+)/nameservers$', views.ZoneNameServerDetail.as_view()),
    re_path(r'^zonefiles/(?P<name>(\d+/)?[^/]+)', views.ZoneFileDetail.as_view()),
    path('permissions/netgroupregex/', views.NetGroupRegexPermissionList.as_view()),
    path('permissions/netgroupregex/<pk>', views.NetGroupRegexPermissionDetail.as_view()),
    path('history/', views.ModelChangeLogList.as_view()),
    path('history/<table>/<pk>', views.ModelChangeLogDetail.as_view()),
]
